#
# Setup and manage python virtual environments that allows users to develop and
# test the mytemplate2 python package.
#
# Before using this setup, please setup tox in your system and learn about the
# difference bewtween running `tox` and `tox -r` so that you can use tox without
# surprises.
#
# If the environment variable COVERAGE_FILE is set, then this is the coverage
# file that will be used with all associated work.  If it is not specified, then
# the coverage file is .coverage_mytemplate2.
#
# The following commands can be run from the directory that contains this file.
#   tox -r -e coverage
#      * Execute the full test suite for the package and save coverage
#        results to the coverage file
#      * The test runs the package code in the local clone rather than code
#        installed into python so that coverage results accessed through web
#        services such as Coveralls are clean and straightforward
#   tox -r -e nocoverage
#       * Execute the full test suite for the package using the code installed
#         into python
#   tox -r -e subC
#       * Execute the test suite for the subA subpackage only using the code
#         installed into python
#   tox -r -e report
#       * It is intended that this be run after or with coverage
#       * Generate a report and an HTML report for the package's full test suite
#   tox -r -e black
#       * This is likely only useful for developers working on a local clone
#       * Apply black to all files in the package for cleaning/standardization
#       * This should never be included as default tox work since it could
#         alter uncommitted code under active development
# In this interest of aiding developers, running `tox` or `tox -r` will only
# carry out the nocoverage work.
#
# Additionally, you can run any combination of the above such as
#                    tox -r -e report,coverage
#

# TODO: Add in flake8, mypy, and check-manifest.  Should these by individual tox
# environments or under a more general "check" environment?
# TODO: Run python setup.py check as well.

[tox]
# TODO: Add in python matrix
requires = tox>=4
env_list = nocoverage

[testenv]
description = Run the mytemplate2 full test suite
passenv = COVERAGE_FILE
setenv =
    COV_FILE = {env:COVERAGE_FILE:.coverage_mytemplate2}
basepython = py39
deps =
    coverage: coverage
usedevelop =
    coverage: true
    nocoverage: false
commands =
    nocoverage: python -m unittest mytemplate2
    coverage: coverage run --data-file={env:COV_FILE} -m unittest discover -s ./src/mytemplate2 -t ..

[testenv:subC]
description = Run the mytemplate2 subC test suite
commands = python -m unittest mytemplate2.subC

[testenv:report]
description = Generate coverage reports
deps = coverage
depends = coverage
skip_install = true
commands = 
    coverage report --data-file={env:COV_FILE}
    coverage html --data-file={env:COV_FILE}

[testenv:black]
description = Clean-up code with black
deps = black
skip_install = true
commands = black {toxindir}

