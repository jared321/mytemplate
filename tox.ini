#
# Setup and manage python virtual environments that allows users to work
# globally with a set of coverage results each acquired individually.
#
# Before using this setup, please setup tox in your system and learn about the
# difference bewtween running `tox` and `tox -r` so that you can use tox without
# surprises.
#
# This tox.ini is explicity setup in the root of the repository and saves the
# aggerate coverage result to the root as .coverage.  This is done so that
# Coveralls
#   * finds the report,
#   * shows correctly the filenames of python files inside (i.e., within the
#     mytemplate_pypkg directory) and outside (e.g., within subA) of the python
#     package, and
#   * allows users to view the coverage results for each python file inside and
#     outside of the python package.
# This extra care is needed as a result of developing subpackages such as subA
# outside of the python package and including it into the package via symlink.
#
# No work will be carried out by default with the calls `tox` and `tox -r`.
#
# The following commands can be run from the directory that contains this file.
#   tox -r -e aggregate -- <coverage files>
#      * Combine all given coverage.py coverage files into the file .coverage
#      * For best results, none of the given files should be named .coverage
#      * Preserve the original coverage files
#   tox -r -e report
#       * It is intended that this be run after or with aggregate
#       * Generate a report and an HTML report for the aggregated coverage
#         results
#   tox -r -e coveralls
#       * This is likely only useful for CI solutions
#       * It is intended that this be run after or with aggregate
#       * Send the aggegrated coverage report to Coveralls
#
# Additionally, you can run any combination of the above such as
#   tox -r -e report,coveralls,aggregate -- <coverage files>
# Note that tox will automatically run aggregrate before the others.
#

[tox]
requires = tox>=4
env_list =

[testenv]
# We only need a single python for this work and we have no code to install
basepython = py39
skip_install = true
setenv =
    COVERAGE_FILE = .coverage 

[testenv:aggregate]
description = Aggregate all given coverage results into single file
deps = coverage
commands = coverage combine --keep --data-file={env:COVERAGE_FILE} {posargs}

[testenv:report]
# Unless an individual coverage report was saved to COVERAGE_FILE, this should fail
# if you don't run aggregate first
description = Generate reports for aggregated coverage results
deps = coverage
depends = aggregate
commands = 
    coverage report --data-file={env:COVERAGE_FILE}
    coverage html --data-file={env:COVERAGE_FILE}

[testenv:coveralls]
# Unless an individual coverage report was saved to COVERAGE_FILE, this should fail
# if you don't run aggregate first
description = Post aggregated coverage results to coveralls via GitHub Action
passenv = GITHUB_*, COVERALLS_*
deps = coveralls
depends = aggregate
commands = 
    coveralls --service=github --basedir={toxindir}
    coveralls --finish

